import { Archetype } from '../am/Archetype';
import { TermBindingItem } from '../am/TermBindingItem';
import { DictionaryItem } from './DictionaryItem';
export declare namespace TerminologyQuery {
    class Options {
        matchSpecialized?: boolean;
        matchParent?: boolean;
        language?: string;
        overlayId?: string;
    }
    function findTermDefinitionByPath(achertype: Archetype, path: string, options?: Options): DictionaryItem;
    /**
     *
     * @param {Archetype} achertype
     * @param {string} code - nodeId (options.byPath is false) or path (options.byPath is true)
     * @param {TerminologyQuery.Options} options - extras default {language: 'pt-br', matchSpecialized: true, byPath: true}
     * @returns {DictionaryItem}
     */
    function findTermDefinition(achertype: Archetype, code: string, options?: Options): DictionaryItem;
    function findValueSets(achertype: Archetype, id: string, overlayId?: string): string[];
    function findTermDefinitionByValueSet(achertype: Archetype, code: string, overlayId?: string): DictionaryItem;
    function findTermBinds(achertype: Archetype, code: string, overlayId?: string): TermBindingItem[];
}
