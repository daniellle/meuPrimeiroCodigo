import { ParserRuleContext, Token } from 'antlr4ts';
import { ParseTree } from 'antlr4ts/tree';
import { AtCodeContext, OdinCodePhraseValueContext, OdinCodePhraseValueListContext, OdinObjectValueContext, OdinValueContext, OpenStringListContext } from '../../grammar/AdlParser';
import { CodePhrase } from '../../rm/CodePhrase';
export declare function collectText(ctx: ParseTree | Token): string;
export declare function tokenOf(tree: ParseTree): Token;
export declare function collectNonNullText(ctx: ParseTree): string;
export declare function collectString(tStringList: OpenStringListContext | OdinValueContext | null): string | null;
export declare function unescapeString(str: string): string;
export declare function getAdlPropertyOrNull(adlContext: OdinObjectValueContext, name: string): OdinValueContext;
export declare function collectStringList(tStringList: OpenStringListContext): string[];
export declare function parseAtCode(ctx: AtCodeContext): string | null;
export declare function collectTextWithSpaces(ctx: ParserRuleContext): string;
export declare function parseCodePhrase(ctx: OdinCodePhraseValueContext): CodePhrase;
export declare function parseCodePhraseListSingleItem(ctx: OdinCodePhraseValueListContext): CodePhrase;
export declare function parseInteger(tNumber: ParseTree): number;
