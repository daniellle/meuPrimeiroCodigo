import { ObjectId } from './ObjectId';
/**
 * Identifier for archetypes. Ideally these would identify globally unique archetypes.
 * Lexical form:
 * rm_originator '-' rm_name '-' rm_entity '.' concept_name { '-' specialisation }* '.v' number
 */
export declare class ArchetypeId extends ObjectId {
    private static PATTERN;
    constructor(value?: string);
    /**
     * Organisation originating the reference model on which this archetype is based, e.g. openehr , cen , hl7 .
     * @returns {string}
     */
    getRmOriginator(): string;
    /**
     * Name of the reference model, e.g. rim, ehr_rm, en13606 .
     * @returns {string}
     */
    getRmName(): string;
    /**
     * Name of the ontological level within the reference model to which this archetype is targeted,
     * e.g. for openEHR, folder , composition , section , entry .
     * @returns {string}
     */
    getRmEntity(): string;
    getDomainConcept(): string;
    /**
     * Name of specialisation of concept, if this archetype is a specialisation of another archetype, e.g. cholesterol .
     * @returns {string}
     */
    getSpecialisation(): string;
    getVersionId(): string;
}
