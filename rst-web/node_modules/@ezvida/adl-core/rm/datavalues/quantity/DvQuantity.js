"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var IFormObject_1 = require("../../../rminfo/spec/IFormObject");
var Decorators_1 = require("../../../typed-json/customizer/validator/Decorators");
var Typed_json_1 = require("../../../typed-json/Typed-json");
var DvAmount_1 = require("./DvAmount");
/**
 * Quantitified type representing scientific quantities,
 * i.e. quantities expressed as a magnitude and units.
 * Units were inspired by the Unified Code for Units of Measure (UCUM),
 * developed by Gunther Schadow and Clement J. McDonald of The Regenstrief Institute.
 * Can also be used for time durations, where it is more convenient to treat these as simply a number
 * of seconds rather than days, months, years.
 */
var DvQuantity = /** @class */ (function (_super) {
    tslib_1.__extends(DvQuantity, _super);
    function DvQuantity() {
        var _this = _super.call(this) || this;
        _this.magnitude = null;
        _this.units = null;
        _this.precision = -1;
        return _this;
    }
    DvQuantity.prototype.getMagnitude = function () {
        return this.magnitude;
    };
    tslib_1.__decorate([
        Decorators_1.Nullable,
        Typed_json_1.JsonMember({ tags: IFormObject_1.FORM_TAG }),
        tslib_1.__metadata("design:type", Object)
    ], DvQuantity.prototype, "constraint", void 0);
    tslib_1.__decorate([
        Typed_json_1.JsonMember,
        tslib_1.__metadata("design:type", Number)
    ], DvQuantity.prototype, "magnitude", void 0);
    tslib_1.__decorate([
        Typed_json_1.JsonMember,
        tslib_1.__metadata("design:type", String)
    ], DvQuantity.prototype, "units", void 0);
    tslib_1.__decorate([
        Decorators_1.Nullable,
        Typed_json_1.JsonMember,
        tslib_1.__metadata("design:type", Number)
    ], DvQuantity.prototype, "precision", void 0);
    DvQuantity = tslib_1.__decorate([
        Typed_json_1.JsonObject({ name: 'DvQuantity' }),
        tslib_1.__metadata("design:paramtypes", [])
    ], DvQuantity);
    return DvQuantity;
}(DvAmount_1.DvAmount));
exports.DvQuantity = DvQuantity;
//# sourceMappingURL=DvQuantity.js.map