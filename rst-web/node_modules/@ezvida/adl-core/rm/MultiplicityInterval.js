"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var Interval_1 = require("./Interval");
var MultiplicityInterval = /** @class */ (function (_super) {
    tslib_1.__extends(MultiplicityInterval, _super);
    function MultiplicityInterval() {
        return _super.call(this) || this;
    }
    /**
     * Equal to '0..*' or '*'
     * @return MultiplicityInterval
     */
    MultiplicityInterval.UNBOUNDED = function () {
        var result = new MultiplicityInterval();
        result.lower = 0;
        result.upperUnbounded = true;
        return result;
    };
    /**
     * True if this interval imposes no constraints, i.e. is set to 0..*
     * @returns {boolean}
     */
    MultiplicityInterval.prototype.isOpen = function () {
        return 0 === this.lower && this.upperUnbounded && this.lowerIncluded;
    };
    /**
     * True if this interval expresses mandation, i.e. 1..1.
     * @returns {boolean}
     */
    MultiplicityInterval.prototype.isMandatory = function () {
        return !this.lowerUnbounded && this.lower >= 1;
    };
    /**
     * True if this interval expresses optionality, i.e. 0..1.
     * @returns {boolean}
     */
    MultiplicityInterval.prototype.isOptional = function () {
        return 0 === this.lower && 1 === this.upper && !this.upperUnbounded && this.lowerIncluded && this.upperIncluded;
    };
    /**
     * True if this interval is set to 0..0.
     * @returns {boolean}
     */
    MultiplicityInterval.prototype.isProhibited = function () {
        return 0 === this.lower && 0 === this.upper && !this.upperUnbounded;
    };
    return MultiplicityInterval;
}(Interval_1.Interval));
exports.MultiplicityInterval = MultiplicityInterval;
//# sourceMappingURL=MultiplicityInterval.js.map