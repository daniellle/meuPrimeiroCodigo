import { Archetype } from '../am/Archetype';
import { CObject } from '../am/CObject';
import { Locatable } from '../rm/archetyped/Locatable';
import { RmObject } from '../rm/RmObject';
import { JsonMemberOptions } from '../typed-json/Typed-json';
import { IFormObject } from './spec/IFormObject';
export declare class RmObjectCreator {
    private classLookup;
    private archetype;
    constructor(archetype?: Archetype);
    create(constraint: CObject, root?: Locatable): RmObject;
    setValues(object: {}, rmAttributeName: string, values: {}[]): void;
    setConstraint(object: IFormObject, rmAttributeName: string, values: CObject, root?: Locatable): void;
    isMultipleValued(result: RmObject, rmAttributeName: string): Function | JsonMemberOptions<any>;
    addElementToListOrSetSingleValues(object: RmObject, attribute: string, element: RmObject): void;
    addElementToList(object: RmObject, attributeInfo: JsonMemberOptions<Function>, element: RmObject): void;
    traverseWithPath(object: RmObject): void;
}
