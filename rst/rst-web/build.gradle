buildscript {

  dependencies {
    classpath "com.moowork.gradle:gradle-node-plugin:${comMooworkVersion}"
  }

}

// Apply the java plugin to add support for Java
apply plugin: "com.moowork.node"
apply plugin: "com.moowork.gulp"
apply plugin: "idea"
apply plugin: "war"

war {
  baseName = "rst-web"
  from( "${buildDir}/webapp" )
}

dependencyManagement {

  imports {
    mavenBom "fw:fw:${fwVersion}"
    mavenBom "org.jboss.spec:jboss-javaee-7.0:${orgJbossSpecJavaeeVersion}"
    mavenBom "org.wildfly.bom:wildfly-javaee7-with-tools:${orgWildflyVersion}"
  }

}

dependencies {

  // FW
  compile "fw:fw-web"
  compileOnly "fw:fw-core"
  compileOnly "fw:fw-security"

  // Project modules
  compileOnly project(":rst-service")

  //Import the CDI API, we use provided scope as the API is included in WildFly
  compileOnly "javax.enterprise:cdi-api"

  // Apache Dependencies
  compileOnly "org.apache.oltu.oauth2:org.apache.oltu.oauth2.authzserver:${orgApacheOltuVersion}"

  // Jboss Dependencies
  compileOnly "org.jboss.spec.javax.annotation:jboss-annotations-api_1.2_spec"
  compileOnly "org.jboss.spec.javax.websocket:jboss-websocket-api_1.0_spec:${orgJbossSpecJavaxWebsocketVersion}"
  compileOnly "org.jboss.spec.javax.servlet:jboss-servlet-api_3.1_spec"
  compileOnly "org.jboss.spec.javax.ws.rs:jboss-jaxrs-api_2.0_spec"

  //Apache Commons
  compileOnly "commons-lang:commons-lang:${orgApacheCommonsLangVersion}"
  compileOnly "commons-collections:commons-collections:${orgApacheCommonsCollectionsVersion}"
  compileOnly "commons-beanutils:commons-beanutils:${orgApacheCommonsBeanutilsVersion}"

  // Tests
  testCompile "junit:junit:${orgJunitVersion}"
  testCompile "org.mockito:mockito-all:${orgMockitoVersion}"
  testCompile "org.powermock:powermock-api-mockito:${orgPowermockVersion}"
  testCompile "org.powermock:powermock-module-junit4:${orgPowermockVersion}"

}

task wrapper(type: Wrapper) {
  gradleVersion = "2.7"
}

task bundle(type: YarnTask) {

  inputs.files(fileTree("node_modules"))
  inputs.files(fileTree("src"))
  inputs.file("package.json")
  inputs.file("webpack.config.js")

  outputs.dir("build/resources/static")

  dependsOn yarn
  args = ["run", "package"]

}

gulp {
  workDir = file("${project.projectDir}")
  colors = true
  bufferOutput = false
}

// run npm install
gulp_default.dependsOn "npmInstall"

// run gulp install
gulp_default.dependsOn "installGulp"

// gulp copy
gulp_build.dependsOn "bundle"

tasks.processResources.dependsOn(gulp_build)
