import { IFormConstraint } from '../../../rminfo/spec/IFormConstraint';
import { IFormDvQuantity } from '../../../rminfo/spec/IFormDvQuantity';
import { DvAmount } from './DvAmount';
/**
 * Quantitified type representing scientific quantities,
 * i.e. quantities expressed as a magnitude and units.
 * Units were inspired by the Unified Code for Units of Measure (UCUM),
 * developed by Gunther Schadow and Clement J. McDonald of The Regenstrief Institute.
 * Can also be used for time durations, where it is more convenient to treat these as simply a number
 * of seconds rather than days, months, years.
 */
export declare class DvQuantity extends DvAmount implements IFormConstraint<IFormDvQuantity> {
    constraint: IFormDvQuantity;
    /**
     * Numeric magnitude of the quantity.
     */
    magnitude: number;
    /**
     * Stringified units, expressed in UCUM unit syntax, e.g. "kg/m2", â€œmm[Hg]", "ms-1", "km/h".
     * Implemented accordingly in subtypes.
     */
    units: string;
    /**
     * Precision to which the value of the quantity is expressed, in terms of number of decimal places.
     * The value 0 implies an integral quantity.
     * The value -1 implies no limit, i.e. any number of decimal places.
     */
    precision: number;
    constructor();
    getMagnitude(): number;
}
