"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var moment = require("moment");
var typed_json_1 = require("../../../../typed-json");
var DvDuration_1 = require("./DvDuration");
var DvTemporal_1 = require("./DvTemporal");
/**
 * Represents an absolute point in time from an origin usually interpreted as meaning the start of the current day,
 * specified to a fraction of a second. Semantics defined by ISO 8601.
 * Used for recording real world times, rather than scientifically measured fine amounts of time.
 * The partial form is used for approximate times of events and substance administrations.
 */
var DvTime = /** @class */ (function (_super) {
    tslib_1.__extends(DvTime, _super);
    function DvTime(init) {
        var _this = _super.call(this) || this;
        _this.value = null;
        if (init) {
            Object.assign(_this, init);
        }
        return _this;
    }
    /**
     * Difference of two quantities.
     * @param {DvTime} other
     * @returns {DvDuration}
     */
    DvTime.prototype.diff = function (other) {
        return new DvDuration_1.DvDuration({
            value: moment.duration(this.getMagnitude() - other.getMagnitude()).toISOString()
        });
    };
    /**
     * Numeric value of the time as seconds since the start of day, i.e. 00:00:00.
     * @returns {number}
     */
    DvTime.prototype.getMagnitude = function () {
        return moment(this.value).diff(moment(this.value).startOf('day'), 'seconds');
    };
    tslib_1.__decorate([
        typed_json_1.JsonMember,
        tslib_1.__metadata("design:type", String)
    ], DvTime.prototype, "value", void 0);
    DvTime = tslib_1.__decorate([
        typed_json_1.JsonObject({ name: 'DvTime' }),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], DvTime);
    return DvTime;
}(DvTemporal_1.DvTemporal));
exports.DvTime = DvTime;
//# sourceMappingURL=DvTime.js.map