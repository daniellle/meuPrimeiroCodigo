"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var DvEhrUri_1 = require("../datavalues/DvEhrUri");
var DvText_1 = require("../datavalues/DvText");
var DvMultimedia_1 = require("../datavalues/encapsulated/DvMultimedia");
var AuditDetails_1 = require("./AuditDetails");
var Typed_json_1 = require("../../typed-json/Typed-json");
/**
 * Record an attestation of a party (the committer) to item(s) of record content.
 * An attestation is an explicit signing by one healthcare agent of particular content for various particular purposes, including:
 * for authorisation of a controlled substance or procedure (e.g. sectioning of patient under mental health act);
 * witnessing of content by senior clinical professional;
 * indicating acknowledgement of content by intended recipient, e.g. GP who ordered a test result.
 */
var Attestation = /** @class */ (function (_super) {
    tslib_1.__extends(Attestation, _super);
    function Attestation() {
        var _this = _super.call(this) || this;
        _this.attestedView = null;
        _this.proof = null;
        _this.items = null;
        _this.reason = null;
        _this.isPending = false;
        return _this;
    }
    tslib_1.__decorate([
        Typed_json_1.JsonMember,
        tslib_1.__metadata("design:type", DvMultimedia_1.DvMultimedia)
    ], Attestation.prototype, "attestedView", void 0);
    tslib_1.__decorate([
        Typed_json_1.JsonMember,
        tslib_1.__metadata("design:type", String)
    ], Attestation.prototype, "proof", void 0);
    tslib_1.__decorate([
        Typed_json_1.JsonMember({ elements: DvEhrUri_1.DvEhrUri }),
        tslib_1.__metadata("design:type", Array)
    ], Attestation.prototype, "items", void 0);
    tslib_1.__decorate([
        Typed_json_1.JsonMember,
        tslib_1.__metadata("design:type", DvText_1.DvText)
    ], Attestation.prototype, "reason", void 0);
    tslib_1.__decorate([
        Typed_json_1.JsonMember,
        tslib_1.__metadata("design:type", Boolean)
    ], Attestation.prototype, "isPending", void 0);
    Attestation = tslib_1.__decorate([
        Typed_json_1.JsonObject({ name: 'Attestation' }),
        tslib_1.__metadata("design:paramtypes", [])
    ], Attestation);
    return Attestation;
}(AuditDetails_1.AuditDetails));
exports.Attestation = Attestation;
//# sourceMappingURL=Attestation.js.map