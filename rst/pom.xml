<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>br.com.ezvida.rst</groupId>
    <artifactId>rst</artifactId>
    <version>2.113.0</version>
    <packaging>pom</packaging>

    <name>Registro de Sa√∫de do Trabalhador</name>

    <organization>
        <name>EzVida</name>
    </organization>

    <properties>

        <!-- Explicitly declaring the source encoding eliminates the following
            message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered
            resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <org.wildfly.version>10.0.0.Final</org.wildfly.version>
        <org.jboss.spec.javaee.version>1.0.3.Final</org.jboss.spec.javaee.version>

        <!-- WildFly Maven plug-in to deploy your WAR to a local WildFly container -->
        <org.wildfly.maven.plugin.version>1.0.2.Final</org.wildfly.maven.plugin.version>

        <!-- FW -->
        <fw.version>4.0.0</fw.version>

        <!-- Jboss Security Provider -->
        <org.picketbox.version>4.9.2.Final</org.picketbox.version>
        <org.hibernate.version>5.0.7.Final</org.hibernate.version>

        <!-- Apache OLTU Versions -->
        <org.apache.oltu.version>1.0.2</org.apache.oltu.version>

        <!-- OAuth JWT -->
        <com.oaut.version>3.1.0</com.oaut.version>

        <!-- Apache Commons -->
        <org.apache.commons.collections.version>3.2.2</org.apache.commons.collections.version>
        <org.apache.commons.beanutils.version>1.9.2</org.apache.commons.beanutils.version>
        <org.apache.commons.codec.version>1.10</org.apache.commons.codec.version>
        <org.apache.commons.version>2.6</org.apache.commons.version>

        <!-- Mojo Compile -->
        <org.codehaus.mojo.version>1.5.0</org.codehaus.mojo.version>

        <!-- Sl4j versions -->
        <org.slf4j.version>1.7.25</org.slf4j.version>
        <ch.qos.logback.version>1.2.3</ch.qos.logback.version>
        <ch.qos.cal10n.version>0.7.4</ch.qos.cal10n.version>

        <!-- Google -->
        <com.google.guava.version>20.0</com.google.guava.version>
        <com.google.code.gson.version>2.6.2</com.google.code.gson.version>
        <com.google.code.findbugs.version>3.0.2</com.google.code.findbugs.version>

        <!-- Jackson -->
        <com.fasterxml.jackson.core.version>2.5.4</com.fasterxml.jackson.core.version>

        <!-- Maven-compiler-plugin -->
        <project.build.compiler.target>1.8</project.build.compiler.target>
        <project.build.compiler.source>1.8</project.build.compiler.source>

        <!-- Maven Version -->

        <org.apache.maven.release.plugins.version>2.5.3</org.apache.maven.release.plugins.version>
        <org.apache.maven.plugin.resources.version>2.7</org.apache.maven.plugin.resources.version>
        <org.apache.maven.plugin.release.version>2.5.2</org.apache.maven.plugin.release.version>
        <org.apache.maven.plugin.compile.version>3.3</org.apache.maven.plugin.compile.version>
        <org.apache.maven.plugin.clean.version>3.0.0</org.apache.maven.plugin.clean.version>
        <org.apache.maven.plugins.surefire.version>2.20</org.apache.maven.plugins.surefire.version>

        <org.apache.maven.plugin.war.version>2.6</org.apache.maven.plugin.war.version>
        <org.apache.maven.plugin.ear.version>2.8</org.apache.maven.plugin.ear.version>
        <org.apache.maven.plugin.ejb.version>2.3</org.apache.maven.plugin.ejb.version>

        <br.com.ezvida.rst.ear>false</br.com.ezvida.rst.ear>
        <br.com.ezvida.rst.ear.version>6</br.com.ezvida.rst.ear.version>

        <org.apache.maven.plugin.skip>false</org.apache.maven.plugin.skip>

        <!-- Testes -->

        <org.junit.version>4.12</org.junit.version>
        <org.mockito.version>1.10.19</org.mockito.version>
        <org.powermock.version>1.7.0</org.powermock.version>

        <!-- Sonar -->

        <org.sonar.jacoco.version>4.8.0.9441</org.sonar.jacoco.version>

        <sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
        <sonar.scm.disabled>true</sonar.scm.disabled>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.jacoco.reportMissing.force.zero>true</sonar.jacoco.reportMissing.force.zero>
        <sonar-jacoco-listeners.version>${org.sonar.jacoco.version}</sonar-jacoco-listeners.version>
        <sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>
        <sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>

        <!-- Jacoco -->

        <org.jacoco.version>0.7.9</org.jacoco.version>
        <jacoco.outputDir>${project.build.directory}</jacoco.outputDir>
        <jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
        <jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>

        <!-- Api Client GIRST -->
        <br.com.ezvida.girst.api-client.version>1.10.0</br.com.ezvida.girst.api-client.version>

    </properties>

    <dependencyManagement>

        <dependencies>

            <dependency>
                <groupId>br.com.ezvida.rst</groupId>
                <artifactId>rst-web</artifactId>
                <version>${project.version}</version>
                <type>war</type>
            </dependency>

            <dependency>
                <groupId>br.com.ezvida.rst</groupId>
                <artifactId>rst-service</artifactId>
                <version>${project.version}</version>
                <type>ejb</type>
            </dependency>

            <!-- FW Dependecy -->

            <dependency>
                <groupId>fw</groupId>
                <artifactId>fw-core</artifactId>
                <version>${fw.version}</version>
            </dependency>

            <dependency>
                <groupId>fw</groupId>
                <artifactId>fw-web</artifactId>
                <version>${fw.version}</version>
            </dependency>

            <dependency>
                <groupId>fw</groupId>
                <artifactId>fw-security</artifactId>
                <version>${fw.version}</version>
            </dependency>

            <!-- Define the version of JBoss' Java EE 7 APIs we want to import. Any
                dependencies from org.jboss.spec will have their version defined by this
                BOM -->
            <!-- JBoss distributes a complete set of Java EE 7 APIs including a Bill
                of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection)
                of artifacts. We use this here so that we always get the correct versions
                of artifacts. Here we use the jboss-javaee-7.0 stack (you can read this as
                the JBoss stack of the Java EE 7 APIs). You can actually use this stack with
                any version of WildFly that implements Java EE 7, not just WildFly 10! -->
            <dependency>
                <groupId>org.jboss.spec</groupId>
                <artifactId>jboss-javaee-7.0</artifactId>
                <version>${org.jboss.spec.javaee.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.wildfly.bom</groupId>
                <artifactId>wildfly-javaee7-with-tools</artifactId>
                <version>${org.wildfly.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Logger -->

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${org.slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-ext</artifactId>
                <version>${org.slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${org.slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${ch.qos.logback.version}</version>
            </dependency>

            <dependency>
                <groupId>com.rabbitmq</groupId>
                <artifactId>amqp-client</artifactId>
                <version>4.1.1</version>
            </dependency>
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>4.11</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.cal10n</groupId>
                <artifactId>cal10n-api</artifactId>
                <version>${ch.qos.cal10n.version}</version>
            </dependency>

            <!-- Jackson -->

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${com.fasterxml.jackson.core.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${com.fasterxml.jackson.core.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${com.fasterxml.jackson.core.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-hibernate4</artifactId>
                <version>${com.fasterxml.jackson.core.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.jaxrs</groupId>
                <artifactId>jackson-jaxrs-json-provider</artifactId>
                <version>${com.fasterxml.jackson.core.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${com.fasterxml.jackson.core.version}</version>
            </dependency>

            <!-- Apache OLtu -->

            <dependency>
                <groupId>org.apache.oltu.oauth2</groupId>
                <artifactId>org.apache.oltu.oauth2.authzserver</artifactId>
                <version>${org.apache.oltu.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.oltu.oauth2</groupId>
                <artifactId>org.apache.oltu.oauth2.resourceserver</artifactId>
                <version>${org.apache.oltu.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.oltu.oauth2</groupId>
                <artifactId>org.apache.oltu.oauth2.common</artifactId>
                <version>${org.apache.oltu.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.oltu.oauth2</groupId>
                <artifactId>org.apache.oltu.oauth2.client</artifactId>
                <version>${org.apache.oltu.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-codec</groupId>
                        <artifactId>commons-codec</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- OAuth JWT -->

            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${com.oaut.version}</version>
            </dependency>

            <!-- Apache Commons -->

            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${org.apache.commons.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${org.apache.commons.collections.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${org.apache.commons.beanutils.version}</version>
            </dependency>

            <!-- Google -->

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${com.google.guava.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${com.google.code.gson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>${com.google.code.findbugs.version}</version>
            </dependency>

            <!-- Import Jboss Security -->
            <dependency>
                <groupId>org.picketbox</groupId>
                <artifactId>picketbox</artifactId>
                <version>${org.picketbox.version}</version>
            </dependency>

            <dependency>
                <groupId>br.com.ezvida.girst</groupId>
                <artifactId>api-client</artifactId>
                <version>${br.com.ezvida.girst.api-client.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/net.sf.jasperreports/jasperreports -->
            <dependency>
                <groupId>net.sf.jasperreports</groupId>
                <artifactId>jasperreports</artifactId>
                <version>6.7.0</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>3.17</version>
            </dependency>

        </dependencies>

    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${org.mockito.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>${org.powermock.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${org.powermock.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${org.junit.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>

        <pluginManagement>

            <plugins>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.7</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.shared</groupId>
                            <artifactId>maven-filtering</artifactId>
                            <version>1.3</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${org.apache.maven.plugin.compile.version}</version>
                    <configuration>
                        <source>${project.build.compiler.source}</source>
                        <target>${project.build.compiler.target}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${org.apache.maven.plugin.resources.version}</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ear-plugin</artifactId>
                    <version>${org.apache.maven.plugin.ear.version}</version>
                    <configuration>
                        <fileNameMapping>no-version</fileNameMapping>
                        <defaultLibBundleDir>lib</defaultLibBundleDir>
                        <version>${br.com.ezvida.rst.ear.version}</version>
                        <generateApplicationXml>${br.com.ezvida.rst.ear}</generateApplicationXml>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${org.apache.maven.release.plugins.version}</version>
                    <configuration>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <preparationGoals>clean</preparationGoals>
                        <tagNameFormat>v@{project.version}/Atendimento</tagNameFormat>
                    </configuration>
                </plugin>

            </plugins>

        </pluginManagement>

    </build>

    <profiles>

        <profile>

            <id>coverage</id>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${org.apache.maven.plugins.surefire.version}</version>
                        <configuration>
                            <argLine>${jacoco.agent.ut.arg}</argLine>
                            <properties>
                                <property>
                                    <name>listener</name>
                                    <value>org.sonar.java.jacoco.JUnitListener</value>
                                </property>
                            </properties>
                            <testFailureIgnore>true</testFailureIgnore>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${org.apache.maven.plugins.surefire.version}</version>
                        <configuration>
                            <argLine>-Xmx1024m -XX:MaxPermSize=256m ${jacoco.agent.it.arg}</argLine>
                            <properties>
                                <property>
                                    <name>listener</name>
                                    <value>org.sonar.java.jacoco.JUnitListener</value>
                                </property>
                            </properties>
                            <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>integration-test</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${org.jacoco.version}</version>
                        <executions>
                            <execution>
                                <id>prepare-ut-agent</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <destFile>${sonar.jacoco.reportPath}</destFile>
                                    <propertyName>jacoco.agent.ut.arg</propertyName>
                                    <append>true</append>
                                </configuration>
                            </execution>
                            <execution>
                                <id>prepare-it-agent</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <destFile>${sonar.jacoco.itReportPath}</destFile>
                                    <propertyName>jacoco.agent.it.arg</propertyName>
                                    <append>true</append>
                                </configuration>
                            </execution>
                            <execution>
                                <id>report-aggregate</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>report-aggregate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>

            <dependencies>
                <dependency>
                    <groupId>org.sonarsource.java</groupId>
                    <artifactId>sonar-jacoco-listeners</artifactId>
                    <version>${org.sonar.jacoco.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

        </profile>

    </profiles>


    <modules>
        <module>rst-app</module>
        <module>rst-service</module>
        <module>rst-web</module>
    </modules>
</project>